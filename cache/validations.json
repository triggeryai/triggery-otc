{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "52943dfda38553466ad0a4828568a179265a429aed2a4fb56838cb1a6cb15380",
          "withoutMetadata": "9e5b39558952f1a7cf3629625ef8de2f355e0bed7c2d43080a5bc0681094794e",
          "linkedWithoutMetadata": "9e5b39558952f1a7cf3629625ef8de2f355e0bed7c2d43080a5bc0681094794e"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseETHWithTokens(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:33"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:34"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:36"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "2ecf2f218b07e2c15f943a8f04091363d998b48ed98d3ea7dd3134281d01279e",
          "withoutMetadata": "aef8f703f35ac00698ce74bfc3cb39c929ba19a84fa01f8826b732e6d41825f6",
          "linkedWithoutMetadata": "aef8f703f35ac00698ce74bfc3cb39c929ba19a84fa01f8826b732e6d41825f6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:33"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:34"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:36"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "8161d284401f081eb7a0c0348f4140cbe263c1763fe1a10be52892b21553f035",
          "withoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7",
          "linkedWithoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "43532216b84d36fd924cd0d92af23d5ab84f06e0c9c8b1b4ae39cc34873088ae",
          "withoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7",
          "linkedWithoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:25"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "8161d284401f081eb7a0c0348f4140cbe263c1763fe1a10be52892b21553f035",
          "withoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7",
          "linkedWithoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "927f1dd505984139b358bdce23c1cf833525c510404a9a7f1b996d7417233afa",
          "withoutMetadata": "a9733bb8cdd01aa485cac5f425812e86281702d75a51900afbc142a99d4ae711",
          "linkedWithoutMetadata": "a9733bb8cdd01aa485cac5f425812e86281702d75a51900afbc142a99d4ae711"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)303_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)312_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)312_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)303_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)312_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)303_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "4f1462f937b18fff5dc02f3d94811a7ac90fa1f778e708f99d296197ad07b6fa",
          "withoutMetadata": "275fcf16092bec354e4986a1ca1a5821efe14057db4207d50770a7299d309778",
          "linkedWithoutMetadata": "275fcf16092bec354e4986a1ca1a5821efe14057db4207d50770a7299d309778"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "confirmOrderExecution(uint256)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "d6f0207e8fe76e2112e9d16c4e103e2c2b30bcc68a1df03ab1036ec73d43a83d",
          "withoutMetadata": "d80bd5a253a4ed18f507b9f1681171ea2657c0c6da71c6caa2c35cdbb54b3e36",
          "linkedWithoutMetadata": "d80bd5a253a4ed18f507b9f1681171ea2657c0c6da71c6caa2c35cdbb54b3e36"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "8161d284401f081eb7a0c0348f4140cbe263c1763fe1a10be52892b21553f035",
          "withoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7",
          "linkedWithoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "8161d284401f081eb7a0c0348f4140cbe263c1763fe1a10be52892b21553f035",
          "withoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7",
          "linkedWithoutMetadata": "21da54847491caa57334276495319e1b09fb0eab5708bdf4a2e9a40b61384dc7"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "listTokenForSale(address,uint256,uint256)",
          "listEthForTokens(address,uint256)",
          "cancelListing(uint256,bool)",
          "cancelListingByOwner(uint256,bool)",
          "purchaseTokenWithEth(uint256)",
          "purchaseTokenWithListing(uint256,uint256)",
          "getActiveTokenListings()",
          "getActiveEthListings()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "tokenListings",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            },
            {
              "label": "ethListings",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(EthListing)3165_storage)",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:24"
            },
            {
              "label": "nextTokenListingId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:26"
            },
            {
              "label": "nextEthListingId",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(EthListing)3165_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.EthListing)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TokenListing)3156_storage)": {
              "label": "mapping(uint256 => struct OTCMarket.TokenListing)",
              "numberOfBytes": "32"
            },
            "t_struct(EthListing)3165_storage": {
              "label": "struct OTCMarket.EthListing",
              "members": [
                {
                  "label": "buyer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amountEth",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAmountWanted",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TokenListing)3156_storage": {
              "label": "struct OTCMarket.TokenListing",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "4f1462f937b18fff5dc02f3d94811a7ac90fa1f778e708f99d296197ad07b6fa",
          "withoutMetadata": "275fcf16092bec354e4986a1ca1a5821efe14057db4207d50770a7299d309778",
          "linkedWithoutMetadata": "275fcf16092bec354e4986a1ca1a5821efe14057db4207d50770a7299d309778"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "confirmOrderExecution(uint256)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "be21f0c75b15e83d893fe1a071928d1324809b45a31094c22074c43d51f9c3fe",
          "withoutMetadata": "f631967ae172014fe03934ee2fa04ad585194d297ba2328cc1a8bc073661acdd",
          "linkedWithoutMetadata": "f631967ae172014fe03934ee2fa04ad585194d297ba2328cc1a8bc073661acdd"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "confirmOrderExecution(uint256)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "7dc19a8830493b4b6f509bc11c1ef23a19970432087689f411cf44425ad7ad23",
          "withoutMetadata": "9acacc726b95384880701cd8b0c321d387d1feda74bcbe2a53efca347e06057b",
          "linkedWithoutMetadata": "9acacc726b95384880701cd8b0c321d387d1feda74bcbe2a53efca347e06057b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "baef51514aad9d28cf84d0f8552fab4934eef3c127a8c51b2c323308b8e14dfd",
          "withoutMetadata": "88d42fcadab54567e053e0be7737b7b72ee377ae95d2e24add0c3315e6e5d192",
          "linkedWithoutMetadata": "88d42fcadab54567e053e0be7737b7b72ee377ae95d2e24add0c3315e6e5d192"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "totalPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "fbb38f895cece9761822f58dc7fe18ccc0ef8671a1fad57e0b909fc90f3b800a",
          "withoutMetadata": "3a8378e62ce33cd1a20dac9e582d25ce4f9eff4381c1611ee705dabb46202192",
          "linkedWithoutMetadata": "3a8378e62ce33cd1a20dac9e582d25ce4f9eff4381c1611ee705dabb46202192"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "fbb38f895cece9761822f58dc7fe18ccc0ef8671a1fad57e0b909fc90f3b800a",
          "withoutMetadata": "3a8378e62ce33cd1a20dac9e582d25ce4f9eff4381c1611ee705dabb46202192",
          "linkedWithoutMetadata": "3a8378e62ce33cd1a20dac9e582d25ce4f9eff4381c1611ee705dabb46202192"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "f74317ceb6b09613666c7aa8f08b8265f9b4984a54e00c9f8a62a3ae828e317a",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "f74317ceb6b09613666c7aa8f08b8265f9b4984a54e00c9f8a62a3ae828e317a",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "f74317ceb6b09613666c7aa8f08b8265f9b4984a54e00c9f8a62a3ae828e317a",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC1.sol:OTCMarket": {
        "src": "contracts\\OTC1.sol:8",
        "version": {
          "withMetadata": "d3559d1fd0fad02060d053c73e762096ee369d5698ef33af31348edf69e43e61",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC1.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC1.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3839_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3839_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3839_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "f74317ceb6b09613666c7aa8f08b8265f9b4984a54e00c9f8a62a3ae828e317a",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3166_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3166_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3166_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC1.sol:OTCMarket": {
        "src": "contracts\\OTC1.sol:8",
        "version": {
          "withMetadata": "d3559d1fd0fad02060d053c73e762096ee369d5698ef33af31348edf69e43e61",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC1.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC1.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)3839_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3839_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3839_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "f74317ceb6b09613666c7aa8f08b8265f9b4984a54e00c9f8a62a3ae828e317a",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)255",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)313_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)313_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)255": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)313_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC1.sol:OTCMarket": {
        "src": "contracts\\OTC1.sol:8",
        "version": {
          "withMetadata": "d3559d1fd0fad02060d053c73e762096ee369d5698ef33af31348edf69e43e61",
          "withoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb",
          "linkedWithoutMetadata": "6327daa78c33428df7335bc8b8ce3e071bec4a8e31e0c8c4087badecfb8d94cb"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "placeOrder(uint256,uint256,bool)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256)",
          "executeOrder(uint256)",
          "executeSellOrder(uint256)",
          "getOrders()",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "withdrawFees()",
          "withdrawTokens(uint256)",
          "getUserOrders(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC1.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC1.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)255",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:9"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:10"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:11"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_struct(Order)986_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC1.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)986_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)255": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)986_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "a0fbb5f2f4265225915ebafe569dbf8c455fe50baf438fc8ddc88b7d11b82cda",
          "withoutMetadata": "04714a46aaf02fd8edd9c0d52737b567c526995c81cc8417c6bffb7cae7a224b",
          "linkedWithoutMetadata": "04714a46aaf02fd8edd9c0d52737b567c526995c81cc8417c6bffb7cae7a224b"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "createBuyOrder(uint256,uint256)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256,bool)",
          "matchOrders(uint256,uint256)",
          "setFee(uint256)",
          "setFeeRecipient(address)",
          "getActiveBuyOrders()",
          "getActiveSellOrders()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "buyOrders",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:18"
            },
            {
              "label": "sellOrders",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:19"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:22"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3160_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3160_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "deposit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "ff5cc5f7ec72313e848a91f81e08ef3ac99fe8c9f19f1dca2de7434281f7a2cd",
          "withoutMetadata": "71e18fcb4703382e0f5826d9bf95b281ee024c62805b1014eeb7c5d0e62ac67c",
          "linkedWithoutMetadata": "71e18fcb4703382e0f5826d9bf95b281ee024c62805b1014eeb7c5d0e62ac67c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "createBuyOrder(uint256,uint256)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256,bool)",
          "matchOrders(uint256,uint256)",
          "setFee(uint256)",
          "setFeeRecipient(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "buyOrders",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:18"
            },
            {
              "label": "sellOrders",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:19"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:22"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3160_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3160_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "deposit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/OTC.sol:OTCMarket": {
        "src": "contracts\\OTC.sol:8",
        "version": {
          "withMetadata": "ff5cc5f7ec72313e848a91f81e08ef3ac99fe8c9f19f1dca2de7434281f7a2cd",
          "withoutMetadata": "71e18fcb4703382e0f5826d9bf95b281ee024c62805b1014eeb7c5d0e62ac67c",
          "linkedWithoutMetadata": "71e18fcb4703382e0f5826d9bf95b281ee024c62805b1014eeb7c5d0e62ac67c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "createBuyOrder(uint256,uint256)",
          "createSellOrder(uint256,uint256)",
          "cancelOrder(uint256,bool)",
          "matchOrders(uint256,uint256)",
          "setFee(uint256)",
          "setFeeRecipient(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OTCMarket",
            "src": "contracts\\OTC.sol:31"
          },
          {
            "kind": "state-variable-assignment",
            "name": "fee",
            "src": "contracts\\OTC.sol:22"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "buyOrders",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:18"
            },
            {
              "label": "sellOrders",
              "offset": 0,
              "slot": "3",
              "type": "t_array(t_struct(Order)3160_storage)dyn_storage",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:19"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)842",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:21"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:22"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "OTCMarket",
              "src": "contracts\\OTC.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Order)3160_storage)dyn_storage": {
              "label": "struct OTCMarket.Order[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_struct(Order)3160_storage": {
              "label": "struct OTCMarket.Order",
              "members": [
                {
                  "label": "issuer",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isBuyOrder",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "3"
                },
                {
                  "label": "deposit",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:18",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:31"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:41"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:47"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:50"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:8",
        "version": {
          "withMetadata": "d97ab0f20ff009f98fa7c5cf9bca47828a4c13730248423eeddb6ae1f2093363",
          "withoutMetadata": "9e6ca3b312edc35c958c26019ef84faf92b172206add42f52b4557aea6f5d934",
          "linkedWithoutMetadata": "9e6ca3b312edc35c958c26019ef84faf92b172206add42f52b4557aea6f5d934"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:8",
        "version": {
          "withMetadata": "fe4aae0c49d136ec592c3f9947e72e6c7e722a3efb5e750385b0583f4c5a24de",
          "withoutMetadata": "e6bbca2ef3ed2bc4bdeafdc2570dca9031ee55cb05c5caf0ea50b9582075ebf5",
          "linkedWithoutMetadata": "e6bbca2ef3ed2bc4bdeafdc2570dca9031ee55cb05c5caf0ea50b9582075ebf5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:26",
        "version": {
          "withMetadata": "1749b25e9bb2bf1e4738ac0dd4c3b4e171abb4749a1dc9869f1377e1a415b10a",
          "withoutMetadata": "181dd235aea825c6dfd82e369f43dbb51decbd79ec61e07fe9cae6ad125dc760",
          "linkedWithoutMetadata": "181dd235aea825c6dfd82e369f43dbb51decbd79ec61e07fe9cae6ad125dc760"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:41"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:47"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:50"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:10",
        "version": {
          "withMetadata": "71b42a0dfc7895e3ce038be4e95ac5fa3db7e0ee653edc1e01d50de063a64085",
          "withoutMetadata": "71b42a0dfc7895e3ce038be4e95ac5fa3db7e0ee653edc1e01d50de063a64085",
          "linkedWithoutMetadata": "71b42a0dfc7895e3ce038be4e95ac5fa3db7e0ee653edc1e01d50de063a64085"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:15"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:11",
        "version": {
          "withMetadata": "a1a88bd3a8953051209a3251f2085d8836e10919aa5b51530ea95cd55369a01c",
          "withoutMetadata": "599c9d889fda97cb63edd6df0ec7f9f738808f89c67b8454e16c5d2f62401302",
          "linkedWithoutMetadata": "599c9d889fda97cb63edd6df0ec7f9f738808f89c67b8454e16c5d2f62401302"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:14",
        "version": {
          "withMetadata": "1d54a7ab20452dfd0cab63ab9fec45896a47cf6ebd5f83e968d673057e259e18",
          "withoutMetadata": "fda065e9da6b85aaeb542bc061b6e8b9c0645f5d6406ad20d0690414d0d1246b",
          "linkedWithoutMetadata": "fda065e9da6b85aaeb542bc061b6e8b9c0645f5d6406ad20d0690414d0d1246b"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:41"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:47"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:50"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:25"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:24"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:15",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:41"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:47"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:50"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:24"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:25"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38",
        "version": {
          "withMetadata": "f57e34d36f6b55b952d3b1d998bff029bf7664d399310c30dfa092bda2098a7a",
          "withoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c",
          "linkedWithoutMetadata": "912b4bdaa227babb84384f65799fc2ff73eb2fb57f91aedad0aa02d07d1c0f3c"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol:IERC20Permit": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Permit.sol:42",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:19",
        "version": {
          "withMetadata": "4041b444cfd797727a23ea92a122261496aac1b29ee61dfbd03445b2a2d8a775",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "83c201d67da87c22d013fe4936a246f4fac77b5b886ed01e3d5c322454085d7f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "a9e6e205ce02ed31ea6aaaa9cf8ea674c3dc6664f326ec59266709f99949863f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale": {
        "src": "contracts\\AllowanceCrowdsale.sol:14",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20",
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [
          "tokenWallet()",
          "remainingTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AllowanceCrowdsale",
            "src": "contracts\\AllowanceCrowdsale.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Box.sol:Box": {
        "src": "contracts\\Box.sol:4",
        "version": {
          "withMetadata": "7082352e6d3bfb38f1f319a2ca16c9fffb83373804faf0287957d7575410c4cf",
          "withoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f",
          "linkedWithoutMetadata": "925ac28bbf9839bef9f86ec5b41ec3785d913ce448340c01b8751ecba4a82e6f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts\\Box.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/BoxV2.sol:BoxV2": {
        "src": "contracts\\BoxV2.sol:4",
        "version": {
          "withMetadata": "0967eabf09b2f0141b73274e6d3d28d4c9057d9ae1943ceed82f742fc9ee7f8b",
          "withoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2",
          "linkedWithoutMetadata": "01c3ba37320016517cdb11c3854419e58447d3987ca7ee58cc7d8498e0984ab2"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "store(uint256)",
          "retrieve()",
          "increment()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_value",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts\\BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Crowdsale.sol:Crowdsale": {
        "src": "contracts\\Crowdsale.sol:22",
        "version": {
          "withMetadata": "f9e39510ec1766d89758d6337a065afe8d5950af492140e8cd3e2e6c39529197",
          "withoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e",
          "linkedWithoutMetadata": "878195e6d8d4b4641d451a5019103eae6c4ed0716e84817e9eb54ab2ccbcf13e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(uint256,address payable,address)",
          "()",
          "token()",
          "wallet()",
          "rate()",
          "weiRaised()",
          "buyTokens(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Crowdsale",
            "src": "contracts\\Crowdsale.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/Greeter.sol:Greeter": {
        "src": "contracts\\Greeter.sol:6",
        "version": {
          "withMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "withoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380",
          "linkedWithoutMetadata": "bce68a5bb294b801c44bbebe4c2b96279162f8478b183f7851f3c5e0ac110380"
        },
        "inherit": [],
        "libraries": [
          "hardhat/console.sol:console"
        ],
        "methods": [
          "(string)",
          "greet()",
          "setGreeting(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Greeter",
            "src": "contracts\\Greeter.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "greeting",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "Greeter",
              "src": "contracts\\Greeter.sol:7"
            }
          ],
          "types": {
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManToken.sol:ITManToken": {
        "src": "contracts\\ITManToken.sol:7",
        "version": {
          "withMetadata": "9a1954dc964d1d99904a5d3f27bb33a2ced4090b671c7a0887a5e47069cba5a3",
          "withoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6",
          "linkedWithoutMetadata": "1161def25b66b34b9f6188be03ac2ca65390c2901c4dc826ccb15d187800ebe6"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManToken",
            "src": "contracts\\ITManToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:46"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/ITManTokenCrowdsale.sol:ITManTokenCrowdsale": {
        "src": "contracts\\ITManTokenCrowdsale.sol:10",
        "version": {
          "withMetadata": "aa590f7ee9ebfa70e143ce8ed7d8724950054d277f8b30203d60332ee1a140d2",
          "withoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe",
          "linkedWithoutMetadata": "e372cb11286b6f75447bb380db539b4e0d98eeebaba538afee07765118b3cdbe"
        },
        "inherit": [
          "contracts/TimedCrowdsale.sol:TimedCrowdsale",
          "contracts/AllowanceCrowdsale.sol:AllowanceCrowdsale",
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address payable,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ITManTokenCrowdsale",
            "src": "contracts\\ITManTokenCrowdsale.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_tokenWallet",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "AllowanceCrowdsale",
              "src": "contracts\\AllowanceCrowdsale.sol:17"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "contracts/TimedCrowdsale.sol:TimedCrowdsale": {
        "src": "contracts\\TimedCrowdsale.sol:11",
        "inherit": [
          "contracts/Crowdsale.sol:Crowdsale",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "openingTime()",
          "closingTime()",
          "isOpen()",
          "hasClosed()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimedCrowdsale",
            "src": "contracts\\TimedCrowdsale.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\security\\ReentrancyGuard.sol:37"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IERC20)842",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:26"
            },
            {
              "label": "_wallet",
              "offset": 0,
              "slot": "2",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:29"
            },
            {
              "label": "_rate",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:35"
            },
            {
              "label": "_weiRaised",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Crowdsale",
              "src": "contracts\\Crowdsale.sol:38"
            },
            {
              "label": "_openingTime",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:12"
            },
            {
              "label": "_closingTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "TimedCrowdsale",
              "src": "contracts\\TimedCrowdsale.sol:13"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)842": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      },
      "hardhat/console.sol:console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "aa4fd6a9f07cdd38044ba471a5d45262a05d553bce53ea2f5dc2b0c884e0ceb4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.4"
      }
    }
  ]
}